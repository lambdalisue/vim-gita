let g:V = vital#of('vim_gita')
let g:P = g:V.import('System.Filepath')
let g:F = g:V.import('System.File')

" disable interactive features
let g:gita#_disable_interactive = 1

function! s:setup() abort
  let root = resolve(tempname())
  let g:repository_root = g:P.join(root, 'repository_root')
  let g:non_repository_root = g:P.join(root, 'non_repository_root')

  if isdirectory(g:repository_root)
    call g:F.rmdir(g:repository_root, 'r')
  endif
  if isdirectory(g:non_repository_root)
    call g:F.rmdir(g:non_repository_root, 'r')
  endif

  call mkdir(g:P.join(g:repository_root, 'foo', 'bar', 'hoge'), 'p')
  call mkdir(g:P.join(g:non_repository_root, 'foo', 'bar', 'hoge'), 'p')

  call system(printf('git init %s', g:repository_root))
endfunction
call s:setup()

if v:version == 703
  function! WipeoutAll() abort
    " Vim 7.3 compatible %bufwipeout
    let buflist = []
    for i in range(tabpagenr('$'))
      call extend(buflist, tabpagebuflist(i + 1))
    endfor
    for bufnum in buflist
      if bufexists(bufnum)
        silent execute printf('%dbwipeout!', bufnum)
      endif
    endfor
    bwipeout!
  endfunction
else
  function! WipeoutAll() abort
    try
      silent execute '%bwipeout!'
    catch
      " fail silently
    endtry
  endfunction
endif

function! Capture(command) abort
  redir => contents
  silent execute a:command
  redir END
  return split(contents, '\v\r?\n')
endfunction

let s:assert = themis#helper('assert')
call themis#option('recursive', 1)
call themis#helper('command').with(s:assert)
